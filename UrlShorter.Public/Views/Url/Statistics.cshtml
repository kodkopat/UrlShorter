@model IEnumerable<UrlShorter.Application.Dtos.DailyStatisticsDto>
@inject IHttpContextAccessor _contextAccessor;
@{
    ViewData["Title"] = "Count";
}

<div class="row justify-content-center">
    <div class="col-8">
        <div class="card border-secondary mt-5">
            <div class="card-header">Url Shorter Statistics</div>
            <div class="card-body">

                @if (Model is not { })
                {
                    <form method="post" action="@Url.Action("statistics", "url")">
                        @Html.AntiForgeryToken()
                        <div class="input-group mb-3">
                            <input type="text" name="url" class="form-control" placeholder="example: @($"{_contextAccessor.HttpContext.Request.Host}/xxxxxx")">
                            <button class="btn btn-primary" type="submit">Go!</button>
                        </div>
                    </form>
                }
                else
                {
                    <canvas id="statisticsChart"></canvas>

                }
            </div>
        </div>
    </div>
</div>

@section  scripts {
    @if (Model is { })
    {
        <script>
            const ctx = document.getElementById("statisticsChart").getContext("2d");

            const data = {
                labels: [
            @foreach (var stat in Model)
            {
                @: '@stat.Date.ToShortDateString()',
            }
                                        ],
                datasets: [{
                    label: "Click Count",
                    data: [
            @foreach (var stat in Model)
            {
                @: @stat.ClickCount,
            }
                                            ],
                    backgroundColor: "rgba(54, 162, 235, 0.2)",
                    borderColor: "rgba(54, 162, 235, 1)",
                    borderWidth: 1,
                }]
            };

            const statisticsChart = new Chart(ctx, {
                type: "bar",
                data: data,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
        </script>
    }

}